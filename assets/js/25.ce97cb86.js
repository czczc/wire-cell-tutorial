(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{386:function(e,s,t){"use strict";t.r(s);var a=t(44),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"typical-workflows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typical-workflows"}},[e._v("#")]),e._v(" Typical Workflows")]),e._v(" "),t("p",[e._v("Depending on your purpose, there are different workflows that you can follow. For details, see "),t("a",{attrs:{href:"https://github.com/WireCell/wire-cell-singularity/blob/master/wcdo.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Brett's instruction"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"initialize-a-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialize-a-project"}},[e._v("#")]),e._v(" Initialize a project")]),e._v(" "),t("p",[e._v("Pick a new directory for your project:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("wcdo.sh init\nwcdo.sh wct\nwcdo.sh get-image sl7krb\nwcdo.sh make-project myproj sl7krb\n$ ./wcdo-myproj.sh\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"setup-standalone-wct"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup-standalone-wct"}},[e._v("#")]),e._v(" Setup standalone WCT")]),e._v(" "),t("p",[e._v("The previous step will put you inside the downloaded "),t("code",[e._v("sl7krb")]),e._v(" singularity container.\nWe then use the Fermilab "),t("a",{attrs:{href:"https://cdcvs.fnal.gov/redmine/projects/ups/wiki/Getting_Started_Using_UPS",target:"_blank",rel:"noopener noreferrer"}},[e._v("UPS"),t("OutboundLink")],1),e._v(" tool to configure software dependencies:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" /cvmfs/larsoft.opensciencegrid.org/products/setup\nwcdo-ups-init\npath-append "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$wcdo_ups_products")]),e._v(" PRODUCTS\nwcdo-ups-declare wirecell DEVEL\nsetup wirecell DEVEL -q e17:prof\nwcdo-ups-wct-configure-source\n./wcb -p --notests "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\nsetup wirecell DEVEL -q e17:prof\nwcdo-wirecell-path default\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[e._v("The last two lines are necessary to re-setup the wirecell UPS product to have the correct "),t("code",[e._v("LD_LIBRARY_PATH")]),e._v(" and to reset the "),t("code",[e._v("WIRECELL_PATH")]),e._v(". Now test with:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./wcb -p --alltests\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("If tests run, congratulations, you are ready to start real wire-cell development.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("strong",[e._v("TIP")]),e._v(": Place some of the command lines in your "),t("code",[e._v("wcdo-local-myproj.rc")]),e._v(" file to execute them automatically when you start the singularity container.")])]),e._v(" "),t("h2",{attrs:{id:"run-wct-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-wct-code"}},[e._v("#")]),e._v(" Run WCT code")]),e._v(" "),t("p",[e._v("The WCT code is run through the main program "),t("code",[e._v("wire-cell")]),e._v(" by giving it a configuration file, where all logics and configurations are set (details later).")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("wire-cell -c path/to/example.jsonnet\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"recompile-wct"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recompile-wct"}},[e._v("#")]),e._v(" Recompile WCT")]),e._v(" "),t("p",[e._v("If you change any core code, you need to recompile WCT using")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./wcb\n./wcb "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v(". You can find out where these WCT libraries are installed through:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$LD_LIBRARY_PATH")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("tr")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'\\n'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" wirecell\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("If you followed the above setup instruction, this path should be somewhere under "),t("code",[e._v("/wcdo/lib/ups/wirecell/DEVEL/")])]),e._v(" "),t("h2",{attrs:{id:"write-and-run-tests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#write-and-run-tests"}},[e._v("#")]),e._v(" Write and run tests")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("test/")]),e._v(" directory under each WCT package is the place to put your test code in. Any "),t("code",[e._v(".cxx")]),e._v(" files starting with "),t("code",[e._v("test_")]),e._v(" will be automatically compiled. After you modify existing test code or write a new test, you can compile it through")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./wcb\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Afterwards, you can find the compiled binary test programs under the "),t("code",[e._v("/wcdo/src/wct/build/")]),e._v(" directory, and run them individually.")]),e._v(" "),t("h2",{attrs:{id:"setup-wct-with-larsoft"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup-wct-with-larsoft"}},[e._v("#")]),e._v(" Setup WCT with LArSoft")]),e._v(" "),t("p",[e._v("Assuming you are familiar with LArSoft, this is only slightly more complicated than the above. I suggest you make a new directory and follow the "),t("RouterLink",{attrs:{to:"/workflow.html#initialize-a-project"}},[e._v("instruction")]),e._v(" to start a new project. Taking "),t("strong",[e._v("DUNE")]),e._v(" as an example, place the following lines in your "),t("code",[e._v("wcdo-local-myproj.rc")]),e._v(" file before executing the container:")],1),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("wcdo_mrb_project_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"larsoft"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("wcdo_mrb_project_version")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v08_27_00"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("wcdo_mrb_project_quals")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"e17:prof"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("larwirecell_version")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v08_05_10"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("dunetpc_version")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v08_27_00"')]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# setup ups and mrb")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh\nsetup dunetpc "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$dunetpc_version")]),e._v(" -q "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$wcdo_mrb_project_quals")]),e._v("\n\nwcdo-ups-init\npath-append "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$wcdo_ups_products")]),e._v(" PRODUCTS\nwcdo-mrb-init\nwcdo-mrb-add-source larwirecell test_wc "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$larwirecell_version")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# build wct")]),e._v("\nwcdo-ups-declare wirecell DEVELMRB\nsetup wirecell DEVELMRB -q e17:prof\nwcdo-ups-wct-configure-source\n./wcb -p --notests "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\nsetup wirecell DEVELMRB -q e17:prof\nwcdo-wirecell-path default\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br")])]),t("p",[e._v("Note that you need to define the several package versions at the top. You can find the current versions here: "),t("a",{attrs:{href:"https://cdcvs.fnal.gov/redmine/projects/larsoft/repository/revisions/master/entry/ups/product_deps",target:"_blank",rel:"noopener noreferrer"}},[e._v("larsoft"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://cdcvs.fnal.gov/redmine/projects/larwirecell/repository/revisions/master/entry/ups/product_deps",target:"_blank",rel:"noopener noreferrer"}},[e._v("larwirecell"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://cdcvs.fnal.gov/redmine/projects/dunetpc/repository/revisions/master/entry/ups/product_deps",target:"_blank",rel:"noopener noreferrer"}},[e._v("dunetpc"),t("OutboundLink")],1),e._v(", and change accordingly.")]),e._v(" "),t("p",[e._v("Next you need to build "),t("code",[e._v("larwirecell")]),e._v(" against the current wct on your local computer. First, edit the "),t("code",[e._v("/wcdo/src/mrb/srcs/larwirecell/ups/product_deps")]),e._v(" file and change the line "),t("code",[e._v("wirecell vxx_xx_xx")]),e._v(" to "),t("code",[e._v("wirecell DEVELMRB")]),e._v(". Then run the following commands:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("mrbsetenv\nmrb i "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# only for first time build")]),e._v("\nmrbslp\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("If everything compiles fine, you now have a working environment to develop and test "),t("strong",[e._v("WCT, larwirecell and LArSoft")]),e._v(" code. Note that next time you start up the container, you only need to run "),t("code",[e._v("mrbsetenv")]),e._v(" and "),t("code",[e._v("mrbslp")]),e._v(" to setup the environment.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("strong",[e._v("TIP")]),e._v(": You can use the "),t("code",[e._v("ninja")]),e._v(" compiler instead of the default "),t("code",[e._v("make")]),e._v(" to speed up the compiling. To do so, first set up ninja using "),t("code",[e._v("setup ninja v1_8_2")]),e._v(". Then, replace "),t("code",[e._v("mrb i")]),e._v(" with "),t("code",[e._v("mrb i --generator ninja")]),e._v(".")])])])}),[],!1,null,null,null);s.default=r.exports}}]);